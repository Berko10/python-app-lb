version: '3'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - app1
      - app2
      - app3
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app_network

  app-builder:
    build: ./app
    image: my-flask-app
    entrypoint: [ "echo", "image built" ]
    networks:
      - app_network

  app1:
    image: my-flask-app
    container_name: app1
    depends_on:
      - db
    volumes:
      - ./logs/app1:/app/logs
    networks:
      - app_network

  app2:
    image: my-flask-app
    container_name: app2
    depends_on:
      - db
    volumes:
      - ./logs/app2:/app/logs
    networks:
      - app_network

  app3:
    image: my-flask-app
    container_name: app3
    depends_on:
      - db
    volumes:
      - ./logs/app3:/app/logs
    networks:
      - app_network

  db:
    image: mysql:latest
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: app_db
    volumes:
      - ./mysql/db_data:/var/lib/mysql
      - ./logs/db_logs:/var/log/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  db_data:
